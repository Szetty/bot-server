/*
 * Bot Server API
 *
 * This is a bot API to let bots battle
 *
 * API version: 1.0.0
 * Contact: szederjesiarnold@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package web

import (
	"botServer/web/model"
	"encoding/json"
	"net/http"
	"strings"
)

// A ConnectAPIController binds http requests to an api service and writes the service results to the http response
type ConnectAPIController struct {
	service ConnectAPIServicer
}

// NewConnectAPIController creates a default api controller
func NewConnectAPIController(s ConnectAPIServicer) Router {
	return &ConnectAPIController{service: s}
}

// Routes returns all of the api route for the ConnectAPIController
func (c *ConnectAPIController) Routes() Routes {
	return Routes{
		{
			"HelloPost",
			strings.ToUpper("Post"),
			"/hello",
			c.HelloPost,
		},
	}
}

// HelloPost -
func (c *ConnectAPIController) HelloPost(w http.ResponseWriter, r *http.Request) {
	helloRequest := &model.HelloRequest{}
	if err := json.NewDecoder(r.Body).Decode(&helloRequest); err != nil {
		errorResponse := &model.Error{Message: err.Error()}
		err = EncodeJSONResponse(errorResponse, http.StatusBadRequest, w)
		if err != nil {
			handleServerError(w, err)
		}
		return
	}

	result, err := c.service.HelloPost(*helloRequest)
	if err != nil {
		errorResponse := &model.Error{Message: err.Error()}
		err = EncodeJSONResponse(errorResponse, http.StatusBadRequest, w)
		if err != nil {
			handleServerError(w, err)
		}
		return
	}

	err = EncodeJSONResponse(result, http.StatusOK, w)
	if err != nil {
		handleServerError(w, err)
	}
}
